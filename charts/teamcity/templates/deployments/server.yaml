apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "teamcity.server.fullname" $ }}
  labels:
    {{- include "teamcity.server.labels" $ | nindent 4 }}
spec:
  {{- with .Values.server }}
  {{- $server := . }}
  replicas: {{ .replicaCount | default 1 }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "teamcity.server.selectorLabels" $ | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "teamcity.server.selectorLabels" $ | nindent 8 }}
    spec:
      containers:
        {{- with .containers.server }}
        - name: server
          {{- with .image }}
          image: "{{ .repository }}:{{ .tag | default $.Chart.AppVersion }}"
          imagePullPolicy: {{ .pullPolicy | default "IfNotPresent" }}
          {{- end }}
          {{- if $server.service }}
          ports:
            {{- range $server.service.ports }}
            - containerPort: {{ .targetPort }}
              name: {{ .name }}
              protocol: {{ .protocol }}
            {{- end }}
          {{- end }}
          {{- if .env }}
          env:
          {{ toYaml .env | nindent 12 }}
          {{- end }}
          startupProbe:
            failureThreshold: 3
            initialDelaySeconds: 15
            periodSeconds: 15
            successThreshold: 1
            tcpSocket:
              port: 5432
            timeoutSeconds: 2
          readinessProbe:
            tcpSocket:
              port: {{ .port | default 8111 }}
            initialDelaySeconds: 10
            periodSeconds: 15
            timeoutSeconds: 2
            successThreshold: 1
            failureThreshold: 3
          livenessProbe:
            tcpSocket:
              port: {{ .port | default 8111 }}
            initialDelaySeconds: 30
            periodSeconds: 20
            timeoutSeconds: 2
            successThreshold: 1
            failureThreshold: 5
          {{- if .resources }}
          resources:
          {{ toYaml .resources | nindent 12 }}
          {{- end }}
          {{- if .securityContext }}
          securityContext:
          {{ toYaml .securityContext | nindent 12 }}
          {{- end }}
          {{- if .volumeMounts }}
          volumeMounts:
          {{ toYaml .volumeMounts | nindent 12 }}
          {{- end }}
        {{- end }}
        {{- with .containers.database }}
        - name: database
          {{- with .image }}
          image: "{{ .repository }}:{{ .tag }}"
          imagePullPolicy: {{ .pullPolicy | default "IfNotPresent" }}
          {{- end }}
          {{- if .env }}
          env:
          {{ toYaml .env | nindent 12 }}
          {{- end }}
          readinessProbe:
            exec:
              command:
                - pg_isready
                - '-d'
                - $POSTGRES_DB
                - '-U'
                - $POSTGRES_USER
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 2
          livenessProbe:
            exec:
              command:
                - pg_isready
                - '-d'
                - $POSTGRES_DB
                - '-U'
                - $POSTGRES_USER
            failureThreshold: 5
            initialDelaySeconds: 30
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 2
          {{- if .resources }}
          resources:
          {{ toYaml .resources | nindent 12 }}
          {{- end }}
          {{- if .volumeMounts }}
          volumeMounts:
          {{ toYaml .volumeMounts | nindent 12 }}
          {{- end }}
        {{- end }}
      hostname: {{ .hostname }}
      restartPolicy: Always
      {{- if .volumes }}
      volumes:
      {{ toYaml .volumes | nindent 8 }}
      {{- end }}
  {{ end }}
